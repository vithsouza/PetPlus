/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.petplus;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author yasmi
 */
public class FormRelatorioPacientes extends javax.swing.JFrame {
    private static FormRelatorioPacientes cadRelatorioPacientesUnic;
    private final PacienteService pacienteService; 
   
    public static FormRelatorioPacientes geraFormRelatorioPacientes(){
        if(cadRelatorioPacientesUnic == null){
            cadRelatorioPacientesUnic = new FormRelatorioPacientes();
        }
        return cadRelatorioPacientesUnic;
    }
    /**
     * Creates new form FormRelatorioPacientes
     */
    public FormRelatorioPacientes() {
        initComponents();
        setLocationRelativeTo(null);
        pacienteService = new PacienteService(); 
        carregarPacientes();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePacientes = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Pacientes");

        jTablePacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Paciente", "Raça", "Dono", "CPF do Dono"
            }
        ));
        jScrollPane1.setViewportView(jTablePacientes);

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Excluir paciente");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Buscar paciente");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        deletarPacienteSelecionado();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        buscarPacientePorNome();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        sair();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void preencherTabela(List<Paciente> paciente) {
        DefaultTableModel model = (DefaultTableModel) jTablePacientes.getModel();
        model.setRowCount(0);

        for (Paciente pac : paciente) {

            if (pac.getProprietario() != null) {
                model.addRow(new Object[]{
                    pac.getNome(),
                    pac.getRaca(),
                    pac.getProprietario().getNome(), 
                    pac.getProprietario().getCpf()   
                });
            } else {

                model.addRow(new Object[]{
                    pac.getNome(),
                    pac.getRaca(),
                    "N/A", 
                    "N/A" 
                });
            }
        }
    }



    public final void carregarPacientes() { 
        try {
            List<Paciente> paciente = pacienteService.buscarTodos();
            preencherTabela(paciente);
        } catch (Exception ex) {
            Logger.getLogger(FormRelatorioPacientes.class.getName()).log(Level.SEVERE, "Erro ao carregar pacientes: ", ex);
            JOptionPane.showMessageDialog(this, "Erro ao carregar pacientes: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    public void sair(){
        int ret = JOptionPane.showConfirmDialog(
                null,
                "Deseja realmente voltar ao menu do funcionario?",
                "Saida",
                JOptionPane.YES_NO_CANCEL_OPTION
        );
        if(ret == 0){
            dispose();
        }
    }
    
    public void buscarPacientePorNome() {
    String nome = JOptionPane.showInputDialog(this, "Digite o nome do medicamento para buscar:");

    if (nome != null && !nome.trim().isEmpty()) {
        try {
            List<Paciente> todos = pacienteService.buscarTodos();
            List<Paciente> filtrados = new ArrayList<>();

            for (Paciente pac : todos) {
                if (pac.getNome().toLowerCase().contains(nome.toLowerCase())) {
                    filtrados.add(pac);
                }
            }

            if (filtrados.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nenhum paciente encontrado com esse nome.");
            }

            preencherTabela(filtrados);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao buscar paciente: " + ex.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "Nenhum nome informado para busca.");
    }
}

    
    public void deletarPacienteSelecionado() {
    int linhaSelecionada = jTablePacientes.getSelectedRow();

    if (linhaSelecionada >= 0) {
  
        String nomePaciente = jTablePacientes.getValueAt(linhaSelecionada, 0).toString();

        int confirm = JOptionPane.showConfirmDialog(this,
            "Deseja realmente excluir o paciente: " + nomePaciente + "?",
            "Confirmação",
            JOptionPane.YES_NO_OPTION
        );

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                pacienteService.deletarPorNomePaciente(nomePaciente);
                JOptionPane.showMessageDialog(this, "Paciente excluído com sucesso!");
                carregarPacientes(); // Atualiza tabela
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao excluir paciente: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Selecione um paciente na tabela para excluir.");
    }
}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormRelatorioPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormRelatorioPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormRelatorioPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormRelatorioPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormRelatorioPacientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePacientes;
    // End of variables declaration//GEN-END:variables
}
