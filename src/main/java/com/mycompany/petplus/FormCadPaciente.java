/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.petplus;

import javax.swing.JOptionPane;

/**
 *
 * @author yasmi
 */
public class FormCadPaciente extends javax.swing.JFrame {
    private static FormCadPaciente cadPacienteUnic;
   
    private final PacienteDAO pacienteDAO;
    private final ProprietarioDAO proprietarioDAO;


    public static FormCadPaciente geraFormCadPaciente(){
        if(cadPacienteUnic == null){
            cadPacienteUnic = new FormCadPaciente();
        }
        return cadPacienteUnic;
    }
    
    public FormCadPaciente() {
        initComponents();
        setLocationRelativeTo(null);
        this.pacienteDAO = new PacienteService(); 
        this.proprietarioDAO = new ProprietarioService();
    }
    /**
     * Creates new form FormCadPaciente
     */
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNomePaciente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldIdadePaciente = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldRacaPaciente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldPesoPaciente = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldCpfProprietario = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Dados do Paciente:");

        jLabel2.setText("Nome:");

        jTextFieldNomePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomePacienteActionPerformed(evt);
            }
        });

        jLabel4.setText("Idade:");

        jTextFieldIdadePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdadePacienteActionPerformed(evt);
            }
        });

        jLabel5.setText("Raça:");

        jTextFieldRacaPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRacaPacienteActionPerformed(evt);
            }
        });

        jLabel7.setText("Peso:");

        jTextFieldPesoPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesoPacienteActionPerformed(evt);
            }
        });

        jButton1.setText("Cadastrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setText("CPF do proprietáio:");

        jTextFieldCpfProprietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCpfProprietarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldPesoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldIdadePaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                    .addComponent(jTextFieldNomePaciente))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextFieldRacaPaciente)
                                    .addComponent(jTextFieldCpfProprietario))
                                .addGap(19, 19, 19))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldRacaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldIdadePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldCpfProprietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 73, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton1))
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextFieldPesoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNomePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomePacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomePacienteActionPerformed

    private void jTextFieldIdadePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdadePacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdadePacienteActionPerformed

    private void jTextFieldRacaPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRacaPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRacaPacienteActionPerformed

    private void jTextFieldPesoPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesoPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPesoPacienteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        CadastrarPaciente();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        sair();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldCpfProprietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCpfProprietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCpfProprietarioActionPerformed

    public void sair(){
        int ret = JOptionPane.showConfirmDialog(
                null,
                "Deseja realmente voltar ao cadastro do proprietário?",
                "Saida",
                JOptionPane.YES_NO_CANCEL_OPTION
        );
        if(ret == 0){
            dispose();
        }
    }
    
    public void limparCamposPaciente() {
        jTextFieldNomePaciente.setText("");
        jTextFieldIdadePaciente.setText("");
        jTextFieldRacaPaciente.setText("");
        jTextFieldPesoPaciente.setText("");
        jTextFieldCpfProprietario.setText("");
    }
    
    public void CadastrarPaciente() {
        String nomePaciente = jTextFieldNomePaciente.getText();
        String idadeStr = jTextFieldIdadePaciente.getText();
        String racaPaciente = jTextFieldRacaPaciente.getText();
        String pesoStr = jTextFieldPesoPaciente.getText();
        String cpfProprietarioStr = jTextFieldCpfProprietario.getText(); 
        long cpfProprietario = Long.parseLong(cpfProprietarioStr);


        int idade = 0;
        int peso = 0;
        Proprietario proprietarioEncontrado = null;

        //idade
        try {
            idade = Integer.parseInt(idadeStr);
            if (idade <= 0) {
                JOptionPane.showMessageDialog(this, "Idade deve ser um número inteiro positivo.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Idade deve ser um número inteiro válido.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //peso
        try {
            peso = Integer.parseInt(pesoStr);
            if (peso <= 0) {
                JOptionPane.showMessageDialog(this, "Peso deve ser um número inteiro positivo.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Peso deve ser um número inteiro válido.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
        try {
            if (cpfProprietario <= 0) {
                JOptionPane.showMessageDialog(this, "CPF do Proprietário: " + cpfProprietario);
                //JOptionPane.showMessageDialog(this, "CPF do Proprietário deve ser um número inteiro positivo e válido.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
                return;
            }

            proprietarioEncontrado = proprietarioDAO.buscarPorCPF(cpfProprietario); 
             //System.out.println("Cpf do proprietario: " + cpfProprietario);
             //System.out.println("proprietarioEncontrado: " + proprietarioEncontrado);
              
            if (proprietarioEncontrado == null) {
                JOptionPane.showMessageDialog(this, "Proprietário com CPF " + cpfProprietario + " não encontrado. Cadastre o proprietário primeiro.", "Erro de Proprietário", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "CPF do Proprietário: " + cpfProprietario);
            JOptionPane.showMessageDialog(this, "CPF do Proprietário deve ser um número inteiro válido.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            return;
            
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao buscar proprietário: " + e.getMessage(), "Erro de Proprietário", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }
        

        if (nomePaciente.isEmpty() || racaPaciente.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Os campos Nome e Raça são obrigatórios.", "Campos Vazios", JOptionPane.WARNING_MESSAGE);
            return;
        }


        Paciente novoPaciente = new Paciente(nomePaciente, idade, racaPaciente, peso, proprietarioEncontrado);

        try {
            pacienteDAO.inserir(novoPaciente);
            
            int resposta = JOptionPane.showConfirmDialog(
                this,
                "Paciente " + novoPaciente.getNome() + " cadastrado com sucesso! ID: " + novoPaciente.getId() + "\n" +
                "Deseja cadastrar mais um paciente?",
                "Cadastro de Paciente",
                JOptionPane.YES_NO_OPTION 
            );
            
            if (resposta == JOptionPane.YES_OPTION) {
                limparCamposPaciente(); 
            } else { 
                this.dispose(); 
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar paciente: " + e.getMessage(), "Erro de Cadastro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCadPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCadPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCadPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCadPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCadPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTextFieldCpfProprietario;
    private javax.swing.JTextField jTextFieldIdadePaciente;
    private javax.swing.JTextField jTextFieldNomePaciente;
    private javax.swing.JTextField jTextFieldPesoPaciente;
    private javax.swing.JTextField jTextFieldRacaPaciente;
    // End of variables declaration//GEN-END:variables
}
