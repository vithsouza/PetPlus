/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.petplus;

import java.time.LocalDateTime; 
import java.time.format.DateTimeFormatter; 
import java.time.format.DateTimeParseException; 
import java.util.List; 
import javax.swing.JOptionPane;


/**
 *
 * @author yasmi
 */
public class FormCadConsulta extends javax.swing.JFrame {
    private static FormCadConsulta cadConsultaUnic;
    
    private final ConsultaDAO consultaDAO;
    private final PacienteDAO pacienteDAO;
    private final ProprietarioDAO proprietarioDAO;
   
    public static FormCadConsulta geraFormCadConsulta(){
        if(cadConsultaUnic == null){
            cadConsultaUnic = new FormCadConsulta();
        }
        return cadConsultaUnic;
    }
    /**
     * Creates new form FormCadConsulta
     */
    public FormCadConsulta() {
        initComponents();
        
        this.consultaDAO = new ConsultaService(); 
        this.pacienteDAO = new PacienteService();
        this.proprietarioDAO = new ProprietarioService();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jButtonMarcarConsulta = new javax.swing.JButton();
        jTextFieldNomePaciente = new javax.swing.JTextField();
        jButtonVoltar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldDiaConsulta = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldHoraConsulta = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldCpfProprietario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Paciente:");

        jButtonMarcarConsulta.setText("Marcar");
        jButtonMarcarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMarcarConsultaActionPerformed(evt);
            }
        });

        jTextFieldNomePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomePacienteActionPerformed(evt);
            }
        });

        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        jLabel4.setText("Dia:");

        jTextFieldDiaConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDiaConsultaActionPerformed(evt);
            }
        });

        jLabel5.setText("Hora:");

        jTextFieldHoraConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHoraConsultaActionPerformed(evt);
            }
        });

        jLabel6.setText("CPF do Propriet√°rio:");

        jTextFieldCpfProprietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCpfProprietarioActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Consulta:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldDiaConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                            .addComponent(jTextFieldNomePaciente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonVoltar)
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldHoraConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                    .addComponent(jTextFieldCpfProprietario))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonMarcarConsulta)
                .addGap(125, 125, 125))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldCpfProprietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldHoraConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldDiaConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMarcarConsulta)
                    .addComponent(jButtonVoltar))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonMarcarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMarcarConsultaActionPerformed
        CadastrarConsulta();
    }//GEN-LAST:event_jButtonMarcarConsultaActionPerformed

    private void jTextFieldNomePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomePacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomePacienteActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        sair();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jTextFieldDiaConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDiaConsultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDiaConsultaActionPerformed

    private void jTextFieldHoraConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHoraConsultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldHoraConsultaActionPerformed

    private void jTextFieldCpfProprietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCpfProprietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCpfProprietarioActionPerformed

    public void sair(){
        int ret = JOptionPane.showConfirmDialog(
                null,
                "Deseja realmente voltar ao menu do funcionario?",
                "Saida",
                JOptionPane.YES_NO_CANCEL_OPTION
        );
        if(ret == 0){
            dispose();
        }
    }
    
     public void CadastrarConsulta() {
        String nomePaciente = jTextFieldNomePaciente.getText();
        String diaStr = jTextFieldDiaConsulta.getText();
        String horaStr = jTextFieldHoraConsulta.getText();
        String cpfProprietarioStr = jTextFieldCpfProprietario.getText();

        LocalDateTime dataHoraConsulta;
        long cpfProprietario = 0;

        try {
            cpfProprietario = Long.parseLong(cpfProprietarioStr);
            if (cpfProprietario <= 0) {
                JOptionPane.showMessageDialog(this, "CPF do Propriet√°rio deve ser um n√∫mero inteiro positivo.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "CPF do Propriet√°rio deve ser um n√∫mero inteiro v√°lido.", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            String dateTimeString = diaStr + " " + horaStr;
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
            dataHoraConsulta = LocalDateTime.parse(dateTimeString, formatter);
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Formato de Data/Hora inv√°lido. Use dd/MM/yyyy HH:mm", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            return;
        }

        if (nomePaciente.isEmpty()) { 
            JOptionPane.showMessageDialog(this, "O campo Nome do Paciente √© obrigat√≥rio.", "Campos Vazios", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Proprietario proprietarioEncontrado = null;
        Paciente pacienteEncontrado = null;

        try {

            proprietarioEncontrado = proprietarioDAO.buscarPorCPF(cpfProprietario);
            if (proprietarioEncontrado == null) {
                JOptionPane.showMessageDialog(this, "Propriet√°rio com CPF " + cpfProprietario + " n√£o encontrado.", "Erro de Busca", JOptionPane.ERROR_MESSAGE);
                return;
            }


            List<Paciente> pacientesDoProprietario = pacienteDAO.buscarPorProprietario(proprietarioEncontrado);
            for (Paciente p : pacientesDoProprietario) {
                if (p.getNome().equalsIgnoreCase(nomePaciente)) {
                    pacienteEncontrado = p;
                    break;
                }
            }
            if (pacienteEncontrado == null) {
                JOptionPane.showMessageDialog(this, "Paciente '" + nomePaciente + "' n√£o encontrado para o propriet√°rio com CPF " + cpfProprietario + ".", "Erro de Busca", JOptionPane.ERROR_MESSAGE);
                return;
            }


            String statusInicial = "Agendada"; 
            String diagnosticoInicial = ""; 
            String tratamentoInicial = "";

 
            Consulta novaConsulta = new Consulta(statusInicial, diagnosticoInicial, tratamentoInicial, dataHoraConsulta, pacienteEncontrado); 
            
            consultaDAO.inserir(novaConsulta);
            JOptionPane.showMessageDialog(this, "Consulta agendada com sucesso! ID: " + novaConsulta.getId(), "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            limparCamposConsulta(); 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao agendar consulta: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    

    public void limparCamposConsulta() {
        jTextFieldNomePaciente.setText("");
        jTextFieldDiaConsulta.setText("");
        jTextFieldHoraConsulta.setText("");
        jTextFieldCpfProprietario.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCadConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCadConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCadConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCadConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCadConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonMarcarConsulta;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextFieldCpfProprietario;
    private javax.swing.JTextField jTextFieldDiaConsulta;
    private javax.swing.JTextField jTextFieldHoraConsulta;
    private javax.swing.JTextField jTextFieldNomePaciente;
    // End of variables declaration//GEN-END:variables
}
